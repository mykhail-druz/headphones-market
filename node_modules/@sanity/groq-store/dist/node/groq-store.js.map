{"version":3,"file":"groq-store.js","sources":["../../src/listen.ts","../../src/drafts.ts","../../src/patch.ts","../../src/syncingDataset.ts","../../src/groqStore.ts","../../src/exportUtils.ts","../../src/node/getDocuments.ts","../../src/node/support.ts","../../src/index.ts"],"sourcesContent":["import {Subscription, MutationEvent, Config, ApiError, EnvImplementations} from './types'\n\ntype EventSourceInstance = InstanceType<EnvImplementations['EventSource']>\n\nconst isNativeBrowserEventSource = (\n  eventSource: EventSourceInstance\n): eventSource is InstanceType<typeof globalThis.EventSource> =>\n  typeof window !== 'undefined' &&\n  eventSource.addEventListener === window.EventSource.prototype.addEventListener\n\nconst addEventSourceListener = (\n  eventSource: EventSourceInstance,\n  type: string,\n  listener: EventListener\n): void => {\n  if (isNativeBrowserEventSource(eventSource)) {\n    eventSource.addEventListener(type, listener, false)\n  }\n\n  // Polyfilled event source does not accept option parameter\n  eventSource.addEventListener(type, listener)\n}\n\nexport function listen(\n  EventSourceImpl: EnvImplementations['EventSource'],\n  config: Config,\n  handlers: {\n    open: () => void\n    error: (err: Error) => void\n    next: (event: MutationEvent) => void\n  }\n): Subscription {\n  const {projectId, dataset, token} = config\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n  const url = `https://${projectId}.api.sanity.io/v1/data/listen/${dataset}?query=*&effectFormat=mendoza`\n  const es = new EventSourceImpl(url, {withCredentials: true, headers})\n\n  addEventSourceListener(es, 'welcome', handlers.open)\n\n  addEventSourceListener(es, 'mutation', getMutationParser(handlers.next))\n\n  addEventSourceListener(es, 'channelError', (msg: any) => {\n    es.close()\n\n    let data\n    try {\n      data = JSON.parse(msg.data) as ApiError\n    } catch (err) {\n      handlers.error(new Error('Unknown error parsing listener message'))\n      return\n    }\n\n    handlers.error(\n      new Error(data.message || data.error || `Listener returned HTTP ${data.statusCode}`)\n    )\n  })\n\n  addEventSourceListener(es, 'error', (err: Event) => {\n    const origin = typeof window !== 'undefined' && window.location.origin\n    const hintSuffix = origin ? `, and that the CORS-origin (${origin}) is allowed` : ''\n    const errorMessage = isErrorLike(err) ? ` (${err.message})` : ''\n    handlers.error(\n      new Error(\n        `Error establishing listener - check that the project ID and dataset are correct${hintSuffix}${errorMessage}`\n      )\n    )\n  })\n\n  return {\n    unsubscribe: (): Promise<void> => Promise.resolve(es.close()),\n  }\n}\n\nfunction getMutationParser(cb: (event: MutationEvent) => void): (msg: any) => void {\n  return (msg: any) => {\n    let data\n    try {\n      data = JSON.parse(msg.data)\n    } catch (err) {\n      // intentional noop\n      return\n    }\n\n    cb(data)\n  }\n}\n\nfunction isErrorLike(err: unknown): err is {message: string} {\n  return typeof err === 'object' && err !== null && 'message' in err\n}\n","import {SanityDocument} from '@sanity/types'\n\nexport function isDraft(doc: SanityDocument): boolean {\n  return doc._id.startsWith('drafts.')\n}\n\nexport function getPublishedId(document: SanityDocument): string {\n  return isDraft(document) ? document._id.slice(7) : document._id\n}\n","import {SanityDocument} from '@sanity/types'\nimport {applyPatch} from 'mendoza'\n\nexport function applyPatchWithoutRev(\n  doc: SanityDocument | null,\n  patch: unknown[]\n): SanityDocument | null {\n  const patchDoc = {...doc} as Omit<SanityDocument, '_rev'>\n  delete patchDoc._rev\n  return applyPatch(patchDoc, patch)\n}\n","import {SanityDocument} from '@sanity/types'\nimport {listen} from './listen'\nimport {getPublishedId} from './drafts'\nimport {applyPatchWithoutRev} from './patch'\nimport {Config, EnvImplementations, MutationEvent, Subscription} from './types'\n\nconst DEBOUNCE_MS = 25\n\nfunction noop() {\n  return Promise.resolve()\n}\n\nexport function getSyncingDataset(\n  config: Config,\n  onNotifyUpdate: (docs: SanityDocument[]) => void,\n  {getDocuments, EventSource}: EnvImplementations\n): Subscription & {loaded: Promise<void>} {\n  const {\n    projectId,\n    dataset,\n    listen: useListener,\n    overlayDrafts,\n    documentLimit,\n    token,\n    includeTypes,\n  } = config\n\n  if (!useListener) {\n    const loaded = getDocuments({projectId, dataset, documentLimit, token, includeTypes})\n      .then(onUpdate)\n      .then(noop)\n    return {unsubscribe: noop, loaded}\n  }\n\n  const indexedDocuments = new Map<string, SanityDocument>()\n\n  // undefined until the listener has been set up and the initial export is done\n  let documents: SanityDocument[] | undefined\n\n  // holds any mutations that happen while fetching documents so they can be applied after updates\n  const buffer: MutationEvent[] = []\n\n  // Return a promise we can resolve once we've established a listener and reconciled any mutations\n  let onDoneLoading: () => void\n  let onLoadError: (error: Error) => void\n  const loaded = new Promise<void>((resolve, reject) => {\n    onDoneLoading = resolve\n    onLoadError = reject\n  })\n\n  // We don't want to flush updates while we're in the same transaction, so a normal\n  // throttle/debounce wouldn't do it. We need to wait and see if the next mutation is\n  // within the same transaction as the previous, and if not we can flush. Of course,\n  // we can't wait forever, so an upper threshold of X ms should be counted as \"ok to flush\"\n  let stagedDocs: SanityDocument[] | undefined\n  let previousTrx: string | undefined\n  let flushTimeout: NodeJS.Timer | undefined\n\n  const listener = listen(EventSource, config, {\n    next: onMutationReceived,\n    open: onOpen,\n    error: (error: Error) => onLoadError(error),\n  })\n\n  return {unsubscribe: listener.unsubscribe, loaded}\n\n  async function onOpen() {\n    const initial = await getDocuments({projectId, dataset, documentLimit, token, includeTypes})\n    documents = applyBufferedMutations(initial, buffer)\n    documents.forEach((doc) => indexedDocuments.set(doc._id, doc))\n    onUpdate(documents)\n    onDoneLoading()\n  }\n\n  function onMutationReceived(msg: MutationEvent) {\n    if (documents) {\n      applyMutation(msg)\n      scheduleUpdate(documents, msg)\n    } else {\n      buffer.push(msg)\n    }\n  }\n\n  function scheduleUpdate(docs: SanityDocument[], msg: MutationEvent) {\n    clearTimeout(flushTimeout)\n\n    if (previousTrx !== msg.transactionId && stagedDocs) {\n      // This is a new transaction, meaning we can immediately flush any pending\n      // doc updates if there are any\n      onUpdate(stagedDocs)\n      previousTrx = undefined\n    } else {\n      previousTrx = msg.transactionId\n      stagedDocs = docs.slice()\n    }\n\n    flushTimeout = setTimeout(onUpdate, DEBOUNCE_MS, docs.slice())\n  }\n\n  function onUpdate(docs: SanityDocument[]) {\n    stagedDocs = undefined\n    flushTimeout = undefined\n    previousTrx = undefined\n    onNotifyUpdate(overlayDrafts ? overlay(docs) : docs)\n  }\n\n  function applyMutation(msg: MutationEvent) {\n    if (!msg.effects || msg.documentId.startsWith('_.')) {\n      return\n    }\n\n    const document = indexedDocuments.get(msg.documentId) || null\n    replaceDocument(msg.documentId, applyPatchWithoutRev(document, msg.effects.apply))\n  }\n\n  function replaceDocument(id: string, document: SanityDocument | null) {\n    const current = indexedDocuments.get(id)\n    const docs = documents || []\n    const position = current ? docs.indexOf(current) : -1\n\n    if (position === -1 && document) {\n      // Didn't exist previously, but was now created. Add it.\n      docs.push(document)\n      indexedDocuments.set(id, document)\n    } else if (document) {\n      // Existed previously and still does. Replace it.\n      docs.splice(position, 1, document)\n      indexedDocuments.set(id, document)\n    } else {\n      // Existed previously, but is now deleted. Remove it.\n      docs.splice(position, 1)\n      indexedDocuments.delete(id)\n    }\n  }\n}\n\nfunction applyBufferedMutations(\n  documents: SanityDocument[],\n  mutations: MutationEvent[]\n): SanityDocument[] {\n  // Group by document ID\n  const groups = new Map<string, MutationEvent[]>()\n  mutations.forEach((mutation) => {\n    const group = groups.get(mutation.documentId) || []\n    group.push(mutation)\n    groups.set(mutation.documentId, group)\n  })\n\n  // Discard all mutations that happened before our current document\n  groups.forEach((group, id) => {\n    const document = documents.find((doc) => doc._id === id)\n    if (!document) {\n      // @todo handle\n      // eslint-disable-next-line no-console\n      console.warn('Received mutation for missing document %s', id)\n      return\n    }\n\n    // Mutations are sorted by timestamp, apply any that arrived after\n    // we fetched the initial documents\n    let hasFoundRevision = false\n    let current: SanityDocument | null = document\n    group.forEach((mutation) => {\n      hasFoundRevision = hasFoundRevision || mutation.previousRev === document._rev\n      if (!hasFoundRevision) {\n        return\n      }\n\n      if (mutation.effects) {\n        current = applyPatchWithoutRev(current, mutation.effects.apply)\n      }\n    })\n\n    // Replace the indexed documents\n    documents.splice(documents.indexOf(document), 1, current)\n  })\n\n  return documents\n}\n\nfunction overlay(documents: SanityDocument[]): SanityDocument[] {\n  const overlayed = new Map<string, SanityDocument>()\n\n  documents.forEach((doc) => {\n    const existing = overlayed.get(getPublishedId(doc))\n    if (doc._id.startsWith('drafts.')) {\n      // Drafts always overlay\n      overlayed.set(getPublishedId(doc), pretendThatItsPublished(doc))\n    } else if (!existing) {\n      // Published documents only override if draft doesn't exist\n      overlayed.set(doc._id, doc)\n    }\n  })\n\n  return Array.from(overlayed.values())\n}\n\n// Strictly speaking it would be better to allow groq-js to resolve `draft.<id>`,\n// but for now this will have to do\nfunction pretendThatItsPublished(doc: SanityDocument): SanityDocument {\n  return {...doc, _id: getPublishedId(doc)}\n}\n","import groq from 'groq'\nimport deepEqual from 'fast-deep-equal'\nimport {throttle} from 'throttle-debounce'\nimport {SanityDocument} from '@sanity/types'\nimport {parse, evaluate} from 'groq-js'\nimport {Config, EnvImplementations, GroqSubscription, GroqStore, Subscription} from './types'\nimport {getSyncingDataset} from './syncingDataset'\n\nexport function groqStore(config: Config, envImplementations: EnvImplementations): GroqStore {\n  let documents: SanityDocument[] = []\n  const executeThrottled = throttle(config.subscriptionThrottleMs || 50, executeAllSubscriptions)\n  const activeSubscriptions: GroqSubscription[] = []\n\n  let dataset: Subscription & {loaded: Promise<void>}\n\n  async function loadDataset() {\n    if (!dataset) {\n      dataset = getSyncingDataset(\n        config,\n        (docs) => {\n          documents = docs\n          executeThrottled()\n        },\n        envImplementations\n      )\n    }\n\n    await dataset.loaded\n  }\n\n  async function query<R = any>(groqQuery: string, params?: Record<string, unknown>): Promise<R> {\n    await loadDataset()\n    const tree = parse(groqQuery, {params})\n    const result = await evaluate(tree as any, {dataset: documents, params})\n    return result.get()\n  }\n\n  async function getDocument(documentId: string): Promise<SanityDocument | null> {\n    await loadDataset()\n    return query(groq`*[_id == $id][0]`, {id: documentId})\n  }\n\n  async function getDocuments(documentIds: string[]): Promise<(SanityDocument | null)[]> {\n    await loadDataset()\n    const subQueries = documentIds.map((id) => `*[_id == \"${id}\"][0]`).join(',\\n')\n    return query(`[${subQueries}]`)\n  }\n\n  function subscribe<R = any>(\n    groqQuery: string,\n    params: Record<string, unknown>,\n    callback: (error: Error | undefined, result?: R) => void\n  ): Subscription {\n    if (!config.listen) {\n      throw new Error('Cannot use `subscribe()` without `listen: true`')\n    }\n\n    // @todo Execute the query against an empty dataset for validation purposes\n\n    // Store the subscription so we can re-run the query on new data\n    const subscription = {query: groqQuery, params, callback}\n    activeSubscriptions.push(subscription)\n\n    let unsubscribed = false\n    const unsubscribe = () => {\n      if (unsubscribed) {\n        return Promise.resolve()\n      }\n\n      unsubscribed = true\n      activeSubscriptions.splice(activeSubscriptions.indexOf(subscription), 1)\n      return Promise.resolve()\n    }\n\n    executeQuerySubscription(subscription)\n    return {unsubscribe}\n  }\n\n  function executeQuerySubscription(subscription: GroqSubscription) {\n    return query(subscription.query, subscription.params)\n      .then((res) => {\n        if ('previousResult' in subscription && deepEqual(subscription.previousResult, res)) {\n          return\n        }\n\n        subscription.previousResult = res\n        subscription.callback(undefined, res)\n      })\n      .catch((err) => {\n        subscription.callback(err)\n      })\n  }\n\n  function executeAllSubscriptions() {\n    activeSubscriptions.forEach(executeQuerySubscription)\n  }\n\n  function close() {\n    executeThrottled.cancel()\n    return dataset ? dataset.unsubscribe() : Promise.resolve()\n  }\n\n  return {query, getDocument, getDocuments, subscribe, close}\n}\n","import {SanityDocument} from '@sanity/types'\nimport {ApiError, StreamError, StreamResult} from './types'\n\nexport function isStreamError(result: StreamResult | undefined): result is StreamError {\n  if (!result) {\n    return false\n  }\n\n  if (!('error' in result) || typeof result.error !== 'object' || result.error === null) {\n    return false\n  }\n\n  return (\n    'description' in result.error &&\n    typeof (result as StreamError).error.description === 'string' &&\n    !('_id' in result)\n  )\n}\n\nexport function getError(body: ApiError): string {\n  if (typeof body === 'object' && 'error' in body && 'message' in body) {\n    return body.message || body.error\n  }\n\n  return '<unknown error>'\n}\n\nexport function isRelevantDocument(doc: SanityDocument): boolean {\n  return !doc._id.startsWith('_.')\n}\n","import split from 'split2'\nimport get from 'simple-get'\nimport {SanityDocument} from '@sanity/types'\nimport {EnvImplementations, StreamResult} from '../types'\nimport {getError, isRelevantDocument, isStreamError} from '../exportUtils'\n\nexport const getDocuments: EnvImplementations['getDocuments'] = function getDocuments({\n  projectId,\n  dataset,\n  token,\n  documentLimit,\n  includeTypes = [],\n}: {\n  projectId: string\n  dataset: string\n  token?: string\n  documentLimit?: number\n  includeTypes?: string[]\n}): Promise<SanityDocument[]> {\n  const baseUrl = `https://${projectId}.api.sanity.io/v1/data/export/${dataset}`\n  const params =\n    includeTypes.length > 0 ? new URLSearchParams({types: includeTypes?.join(',')}) : ''\n  const url = `${baseUrl}?${params}`\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n\n  return new Promise((resolve, reject) => {\n    get({url, headers}, (err, response) => {\n      if (err) {\n        reject(err)\n        return\n      }\n\n      response.setEncoding('utf8')\n\n      const chunks: Buffer[] = []\n      if (response.statusCode !== 200) {\n        response\n          .on('data', (chunk: Buffer) => chunks.push(chunk))\n          .on('end', () => {\n            const body = JSON.parse(Buffer.concat(chunks).toString('utf8'))\n            reject(new Error(`Error streaming dataset: ${getError(body)}`))\n          })\n        return\n      }\n\n      const documents: SanityDocument[] = []\n      response\n        .pipe(split(JSON.parse))\n        .on('data', (doc: StreamResult) => {\n          if (isStreamError(doc)) {\n            reject(new Error(`Error streaming dataset: ${doc.error}`))\n            return\n          }\n\n          if (doc && isRelevantDocument(doc)) {\n            documents.push(doc)\n          }\n\n          if (documentLimit && documents.length > documentLimit) {\n            reject(\n              new Error(`Error streaming dataset: Reached limit of ${documentLimit} documents`)\n            )\n            response.destroy()\n          }\n        })\n        .on('end', () => resolve(documents))\n    })\n  })\n}\n","export function assertEnvSupport(): void {\n  const [major] = process.version.replace(/^v/, '').split('.', 1).map(Number)\n  if (major < 10) {\n    throw new Error('Node.js version 10 or higher required')\n  }\n}\n","/**\n * Note: Entry point for _browser_ build is in browser/index.ts\n */\nimport EventSourcePolyfill from 'eventsource'\nimport {groqStore as groqStoreApi} from './groqStore'\nimport {Config, GroqStore} from './types'\nimport {getDocuments} from './node/getDocuments'\nimport {assertEnvSupport} from './node/support'\n\nexport function groqStore(config: Config): GroqStore {\n  assertEnvSupport()\n\n  return groqStoreApi(config, {\n    EventSource: config.EventSource ?? EventSourcePolyfill,\n    getDocuments,\n  })\n}\n\nexport {default as groq} from 'groq'\nexport {Subscription, GroqStore, Config} from './types'\n"],"names":["isNativeBrowserEventSource","eventSource","window","addEventListener","EventSource","prototype","addEventSourceListener","type","listener","listen","EventSourceImpl","config","handlers","projectId","dataset","token","headers","Authorization","undefined","url","es","withCredentials","open","getMutationParser","next","msg","close","data","JSON","parse","err","error","Error","message","statusCode","origin","location","hintSuffix","errorMessage","isErrorLike","unsubscribe","Promise","resolve","cb","isDraft","doc","_id","startsWith","getPublishedId","document","slice","applyPatchWithoutRev","patch","patchDoc","_rev","applyPatch","DEBOUNCE_MS","noop","getSyncingDataset","onNotifyUpdate","getDocuments","useListener","overlayDrafts","documentLimit","includeTypes","loaded","then","onUpdate","indexedDocuments","Map","documents","buffer","onDoneLoading","onLoadError","reject","stagedDocs","previousTrx","flushTimeout","onMutationReceived","onOpen","initial","applyBufferedMutations","forEach","set","applyMutation","scheduleUpdate","push","docs","clearTimeout","transactionId","setTimeout","overlay","effects","documentId","get","replaceDocument","apply","id","current","position","indexOf","splice","delete","mutations","groups","mutation","group","find","console","warn","hasFoundRevision","previousRev","overlayed","existing","pretendThatItsPublished","Array","from","values","groqStore","envImplementations","executeThrottled","throttle","subscriptionThrottleMs","executeAllSubscriptions","activeSubscriptions","loadDataset","query","groqQuery","params","tree","result","evaluate","getDocument","groq","documentIds","subQueries","map","join","subscribe","callback","subscription","unsubscribed","executeQuerySubscription","res","deepEqual","previousResult","catch","cancel","isStreamError","description","getError","body","isRelevantDocument","baseUrl","length","URLSearchParams","types","response","setEncoding","chunks","on","chunk","Buffer","concat","toString","pipe","split","destroy","assertEnvSupport","major","process","version","replace","Number","groqStoreApi","EventSourcePolyfill"],"mappings":";;;;;;;;;;;;;;;;;AAIA,MAAMA,0BAA0B,GAC9BC,WAAgC,IAEhC,OAAOC,MAAM,KAAK,WAAW,IAC7BD,WAAW,CAACE,gBAAgB,KAAKD,MAAM,CAACE,WAAW,CAACC,SAAS,CAACF,gBAAgB,CAAA;AAEhF,MAAMG,sBAAsB,GAAG,CAC7BL,WAAgC,EAChCM,IAAY,EACZC,QAAuB,KACf;AACR,EAAA,IAAIR,0BAA0B,CAACC,WAAW,CAAC,EAAE;IAC3CA,WAAW,CAACE,gBAAgB,CAACI,IAAI,EAAEC,QAAQ,EAAE,KAAK,CAAC,CAAA;AACpD,GAAA;AAED;AACAP,EAAAA,WAAW,CAACE,gBAAgB,CAACI,IAAI,EAAEC,QAAQ,CAAC,CAAA;AAC9C,CAAC,CAAA;SAEeC,MAAM,CACpBC,eAAkD,EAClDC,MAAc,EACdC,QAIC,EAAA;EAED,MAAM;IAACC,SAAS;IAAEC,OAAO;AAAEC,IAAAA,KAAAA;AAAK,GAAC,GAAGJ,MAAM,CAAA;EAC1C,MAAMK,OAAO,GAAGD,KAAK,GAAG;IAACE,aAAa,EAAE,UAAUF,KAAO,CAAA,CAAA;AAAA,GAAC,GAAGG,SAAS,CAAA;AACtE,EAAA,MAAMC,GAAG,GAAG,CAAA,QAAA,EAAWN,SAA0C,CAAA,8BAAA,EAAAC,QAAsC,6BAAA,CAAA,CAAA;AACvG,EAAA,MAAMM,EAAE,GAAG,IAAIV,eAAe,CAACS,GAAG,EAAE;AAACE,IAAAA,eAAe,EAAE,IAAI;AAAEL,IAAAA,OAAAA;AAAO,GAAC,CAAC,CAAA;EAErEV,sBAAsB,CAACc,EAAE,EAAE,SAAS,EAAER,QAAQ,CAACU,IAAI,CAAC,CAAA;EAEpDhB,sBAAsB,CAACc,EAAE,EAAE,UAAU,EAAEG,iBAAiB,CAACX,QAAQ,CAACY,IAAI,CAAC,CAAC,CAAA;AAExElB,EAAAA,sBAAsB,CAACc,EAAE,EAAE,cAAc,EAAGK,GAAQ,IAAI;IACtDL,EAAE,CAACM,KAAK,EAAE,CAAA;AAEV,IAAA,IAAIC,IAAI,CAAA;IACR,IAAI;MACFA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACE,IAAI,CAAa,CAAA;KACxC,CAAC,OAAOG,GAAG,EAAE;MACZlB,QAAQ,CAACmB,KAAK,CAAC,IAAIC,KAAK,CAAC,wCAAwC,CAAC,CAAC,CAAA;AACnE,MAAA,OAAA;AACD,KAAA;IAEDpB,QAAQ,CAACmB,KAAK,CACZ,IAAIC,KAAK,CAACL,IAAI,CAACM,OAAO,IAAIN,IAAI,CAACI,KAAK,IAA8B,CAAAJ,uBAAAA,EAAAA,IAAI,CAACO,UAAU,CAAA,CAAE,CAAC,CACrF,CAAA;AACH,GAAC,CAAC,CAAA;AAEF5B,EAAAA,sBAAsB,CAACc,EAAE,EAAE,OAAO,EAAGU,GAAU,IAAI;IACjD,MAAMK,MAAM,GAAG,OAAOjC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACkC,QAAQ,CAACD,MAAM,CAAA;IACtE,MAAME,UAAU,GAAGF,MAAM,GAAkC,+BAAAA,MAAoB,CAAA,YAAA,CAAA,GAAG,EAAE,CAAA;AACpF,IAAA,MAAMG,YAAY,GAAGC,WAAW,CAACT,GAAG,CAAC,GAAQ,CAAA,EAAA,EAAAA,GAAG,CAACG,OAAO,CAAA,CAAA,CAAG,GAAG,EAAE,CAAA;AAChErB,IAAAA,QAAQ,CAACmB,KAAK,CACZ,IAAIC,KAAK,CAC2E,CAAAK,+EAAAA,EAAAA,UAAa,CAAAC,EAAAA,YAAc,CAAA,CAAA,CAC9G,CACF,CAAA;AACH,GAAC,CAAC,CAAA;EAEF,OAAO;IACLE,WAAW,EAAE,MAAqBC,OAAO,CAACC,OAAO,CAACtB,EAAE,CAACM,KAAK,EAAE,CAAA;GAC7D,CAAA;AACH,CAAA;AAEA,SAASH,iBAAiB,CAACoB,EAAkC,EAAA;AAC3D,EAAA,OAAQlB,GAAQ,IAAI;AAClB,IAAA,IAAIE,IAAI,CAAA;IACR,IAAI;MACFA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAACE,IAAI,CAAC,CAAA;KAC5B,CAAC,OAAOG,GAAG,EAAE;AACZ;AACA,MAAA,OAAA;AACD,KAAA;IAEDa,EAAE,CAAChB,IAAI,CAAC,CAAA;GACT,CAAA;AACH,CAAA;AAEA,SAASY,WAAW,CAACT,GAAY,EAAA;EAC/B,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,KAAK,IAAI,IAAI,SAAS,IAAIA,GAAG,CAAA;AACpE;;ACvFM,SAAUc,OAAO,CAACC,GAAmB,EAAA;AACzC,EAAA,OAAOA,GAAG,CAACC,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,CAAA;AACtC,CAAA;AAEM,SAAUC,cAAc,CAACC,QAAwB,EAAA;AACrD,EAAA,OAAOL,OAAO,CAACK,QAAQ,CAAC,GAAGA,QAAQ,CAACH,GAAG,CAACI,KAAK,CAAC,CAAC,CAAC,GAAGD,QAAQ,CAACH,GAAG,CAAA;AACjE;;ACLgB,SAAAK,oBAAoB,CAClCN,GAA0B,EAC1BO,KAAgB,EAAA;AAEhB,EAAA,MAAMC,QAAQ,GAAG;IAAC,GAAGR,GAAAA;GAAoC,CAAA;EACzD,OAAOQ,QAAQ,CAACC,IAAI,CAAA;AACpB,EAAA,OAAOC,kBAAU,CAACF,QAAQ,EAAED,KAAK,CAAC,CAAA;AACpC;;ACJA,MAAMI,WAAW,GAAG,EAAE,CAAA;AAEtB,SAASC,IAAI,GAAA;EACX,OAAOhB,OAAO,CAACC,OAAO,EAAE,CAAA;AAC1B,CAAA;AAEM,SAAUgB,iBAAiB,CAC/B/C,MAAc,EACdgD,cAAgD,EAChD;EAACC,YAAY;AAAExD,EAAAA,WAAAA;AAAgC,CAAA,EAAA;EAE/C,MAAM;IACJS,SAAS;IACTC,OAAO;AACPL,IAAAA,MAAM,EAAEoD,WAAW;IACnBC,aAAa;IACbC,aAAa;IACbhD,KAAK;AACLiD,IAAAA,YAAAA;AACD,GAAA,GAAGrD,MAAM,CAAA;EAEV,IAAI,CAACkD,WAAW,EAAE;IAChB,MAAMI,MAAM,GAAGL,YAAY,CAAC;MAAC/C,SAAS;MAAEC,OAAO;MAAEiD,aAAa;MAAEhD,KAAK;AAAEiD,MAAAA,YAAAA;KAAa,CAAC,CAClFE,IAAI,CAACC,QAAQ,CAAC,CACdD,IAAI,CAACT,IAAI,CAAC,CAAA;IACb,OAAO;AAACjB,MAAAA,WAAW,EAAEiB,IAAI;AAAEQ,MAAAA,MAAAA;KAAO,CAAA;AACnC,GAAA;AAED,EAAA,MAAMG,gBAAgB,GAAG,IAAIC,GAAG,EAA0B,CAAA;AAE1D;AACA,EAAA,IAAIC,SAAuC,CAAA;AAE3C;EACA,MAAMC,MAAM,GAAoB,EAAE,CAAA;AAElC;AACA,EAAA,IAAIC,aAAyB,CAAA;AAC7B,EAAA,IAAIC,WAAmC,CAAA;EACvC,MAAMR,MAAM,GAAG,IAAIxB,OAAO,CAAO,CAACC,OAAO,EAAEgC,MAAM,KAAI;AACnDF,IAAAA,aAAa,GAAG9B,OAAO,CAAA;AACvB+B,IAAAA,WAAW,GAAGC,MAAM,CAAA;AACtB,GAAC,CAAC,CAAA;AAEF;AACA;AACA;AACA;AACA,EAAA,IAAIC,UAAwC,CAAA;AAC5C,EAAA,IAAIC,WAA+B,CAAA;AACnC,EAAA,IAAIC,YAAsC,CAAA;AAE1C,EAAA,MAAMrE,QAAQ,GAAGC,MAAM,CAACL,WAAW,EAAEO,MAAM,EAAE;AAC3Ca,IAAAA,IAAI,EAAEsD,kBAAkB;AACxBxD,IAAAA,IAAI,EAAEyD,MAAM;AACZhD,IAAAA,KAAK,EAAGA,KAAY,IAAK0C,WAAW,CAAC1C,KAAK,CAAA;AAC3C,GAAA,CAAC,CAAA;EAEF,OAAO;IAACS,WAAW,EAAEhC,QAAQ,CAACgC,WAAW;AAAEyB,IAAAA,MAAAA;GAAO,CAAA;AAElD,EAAA,eAAec,MAAM,GAAA;AACnB,IAAA,MAAMC,OAAO,GAAG,MAAMpB,YAAY,CAAC;MAAC/C,SAAS;MAAEC,OAAO;MAAEiD,aAAa;MAAEhD,KAAK;AAAEiD,MAAAA,YAAAA;AAAY,KAAC,CAAC,CAAA;AAC5FM,IAAAA,SAAS,GAAGW,sBAAsB,CAACD,OAAO,EAAET,MAAM,CAAC,CAAA;AACnDD,IAAAA,SAAS,CAACY,OAAO,CAAErC,GAAG,IAAKuB,gBAAgB,CAACe,GAAG,CAACtC,GAAG,CAACC,GAAG,EAAED,GAAG,CAAC,CAAC,CAAA;IAC9DsB,QAAQ,CAACG,SAAS,CAAC,CAAA;AACnBE,IAAAA,aAAa,EAAE,CAAA;AACjB,GAAA;EAEA,SAASM,kBAAkB,CAACrD,GAAkB,EAAA;AAC5C,IAAA,IAAI6C,SAAS,EAAE;MACbc,aAAa,CAAC3D,GAAG,CAAC,CAAA;AAClB4D,MAAAA,cAAc,CAACf,SAAS,EAAE7C,GAAG,CAAC,CAAA;AAC/B,KAAA,MAAM;AACL8C,MAAAA,MAAM,CAACe,IAAI,CAAC7D,GAAG,CAAC,CAAA;AACjB,KAAA;AACH,GAAA;AAEA,EAAA,SAAS4D,cAAc,CAACE,IAAsB,EAAE9D,GAAkB,EAAA;IAChE+D,YAAY,CAACX,YAAY,CAAC,CAAA;AAE1B,IAAA,IAAID,WAAW,KAAKnD,GAAG,CAACgE,aAAa,IAAId,UAAU,EAAE;AACnD;AACA;MACAR,QAAQ,CAACQ,UAAU,CAAC,CAAA;AACpBC,MAAAA,WAAW,GAAG1D,SAAS,CAAA;AACxB,KAAA,MAAM;MACL0D,WAAW,GAAGnD,GAAG,CAACgE,aAAa,CAAA;AAC/Bd,MAAAA,UAAU,GAAGY,IAAI,CAACrC,KAAK,EAAE,CAAA;AAC1B,KAAA;IAED2B,YAAY,GAAGa,UAAU,CAACvB,QAAQ,EAAEX,WAAW,EAAE+B,IAAI,CAACrC,KAAK,EAAE,CAAC,CAAA;AAChE,GAAA;EAEA,SAASiB,QAAQ,CAACoB,IAAsB,EAAA;AACtCZ,IAAAA,UAAU,GAAGzD,SAAS,CAAA;AACtB2D,IAAAA,YAAY,GAAG3D,SAAS,CAAA;AACxB0D,IAAAA,WAAW,GAAG1D,SAAS,CAAA;IACvByC,cAAc,CAACG,aAAa,GAAG6B,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,CAAC,CAAA;AACtD,GAAA;EAEA,SAASH,aAAa,CAAC3D,GAAkB,EAAA;AACvC,IAAA,IAAI,CAACA,GAAG,CAACmE,OAAO,IAAInE,GAAG,CAACoE,UAAU,CAAC9C,UAAU,CAAC,IAAI,CAAC,EAAE;AACnD,MAAA,OAAA;AACD,KAAA;IAED,MAAME,QAAQ,GAAGmB,gBAAgB,CAAC0B,GAAG,CAACrE,GAAG,CAACoE,UAAU,CAAC,IAAI,IAAI,CAAA;AAC7DE,IAAAA,eAAe,CAACtE,GAAG,CAACoE,UAAU,EAAE1C,oBAAoB,CAACF,QAAQ,EAAExB,GAAG,CAACmE,OAAO,CAACI,KAAK,CAAC,CAAC,CAAA;AACpF,GAAA;AAEA,EAAA,SAASD,eAAe,CAACE,EAAU,EAAEhD,QAA+B,EAAA;AAClE,IAAA,MAAMiD,OAAO,GAAG9B,gBAAgB,CAAC0B,GAAG,CAACG,EAAE,CAAC,CAAA;AACxC,IAAA,MAAMV,IAAI,GAAGjB,SAAS,IAAI,EAAE,CAAA;AAC5B,IAAA,MAAM6B,QAAQ,GAAGD,OAAO,GAAGX,IAAI,CAACa,OAAO,CAACF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;AAErD,IAAA,IAAIC,QAAQ,KAAK,CAAC,CAAC,IAAIlD,QAAQ,EAAE;AAC/B;AACAsC,MAAAA,IAAI,CAACD,IAAI,CAACrC,QAAQ,CAAC,CAAA;AACnBmB,MAAAA,gBAAgB,CAACe,GAAG,CAACc,EAAE,EAAEhD,QAAQ,CAAC,CAAA;KACnC,MAAM,IAAIA,QAAQ,EAAE;AACnB;MACAsC,IAAI,CAACc,MAAM,CAACF,QAAQ,EAAE,CAAC,EAAElD,QAAQ,CAAC,CAAA;AAClCmB,MAAAA,gBAAgB,CAACe,GAAG,CAACc,EAAE,EAAEhD,QAAQ,CAAC,CAAA;AACnC,KAAA,MAAM;AACL;AACAsC,MAAAA,IAAI,CAACc,MAAM,CAACF,QAAQ,EAAE,CAAC,CAAC,CAAA;AACxB/B,MAAAA,gBAAgB,CAACkC,MAAM,CAACL,EAAE,CAAC,CAAA;AAC5B,KAAA;AACH,GAAA;AACF,CAAA;AAEA,SAAShB,sBAAsB,CAC7BX,SAA2B,EAC3BiC,SAA0B,EAAA;AAE1B;AACA,EAAA,MAAMC,MAAM,GAAG,IAAInC,GAAG,EAA2B,CAAA;AACjDkC,EAAAA,SAAS,CAACrB,OAAO,CAAEuB,QAAQ,IAAI;IAC7B,MAAMC,KAAK,GAAGF,MAAM,CAACV,GAAG,CAACW,QAAQ,CAACZ,UAAU,CAAC,IAAI,EAAE,CAAA;AACnDa,IAAAA,KAAK,CAACpB,IAAI,CAACmB,QAAQ,CAAC,CAAA;IACpBD,MAAM,CAACrB,GAAG,CAACsB,QAAQ,CAACZ,UAAU,EAAEa,KAAK,CAAC,CAAA;AACxC,GAAC,CAAC,CAAA;AAEF;AACAF,EAAAA,MAAM,CAACtB,OAAO,CAAC,CAACwB,KAAK,EAAET,EAAE,KAAI;AAC3B,IAAA,MAAMhD,QAAQ,GAAGqB,SAAS,CAACqC,IAAI,CAAE9D,GAAG,IAAKA,GAAG,CAACC,GAAG,KAAKmD,EAAE,CAAC,CAAA;IACxD,IAAI,CAAChD,QAAQ,EAAE;AACb;AACA;AACA2D,MAAAA,OAAO,CAACC,IAAI,CAAC,2CAA2C,EAAEZ,EAAE,CAAC,CAAA;AAC7D,MAAA,OAAA;AACD,KAAA;AAED;AACA;IACA,IAAIa,gBAAgB,GAAG,KAAK,CAAA;IAC5B,IAAIZ,OAAO,GAA0BjD,QAAQ,CAAA;AAC7CyD,IAAAA,KAAK,CAACxB,OAAO,CAAEuB,QAAQ,IAAI;MACzBK,gBAAgB,GAAGA,gBAAgB,IAAIL,QAAQ,CAACM,WAAW,KAAK9D,QAAQ,CAACK,IAAI,CAAA;MAC7E,IAAI,CAACwD,gBAAgB,EAAE;AACrB,QAAA,OAAA;AACD,OAAA;MAED,IAAIL,QAAQ,CAACb,OAAO,EAAE;QACpBM,OAAO,GAAG/C,oBAAoB,CAAC+C,OAAO,EAAEO,QAAQ,CAACb,OAAO,CAACI,KAAK,CAAC,CAAA;AAChE,OAAA;AACH,KAAC,CAAC,CAAA;AAEF;AACA1B,IAAAA,SAAS,CAAC+B,MAAM,CAAC/B,SAAS,CAAC8B,OAAO,CAACnD,QAAQ,CAAC,EAAE,CAAC,EAAEiD,OAAO,CAAC,CAAA;AAC3D,GAAC,CAAC,CAAA;AAEF,EAAA,OAAO5B,SAAS,CAAA;AAClB,CAAA;AAEA,SAASqB,OAAO,CAACrB,SAA2B,EAAA;AAC1C,EAAA,MAAM0C,SAAS,GAAG,IAAI3C,GAAG,EAA0B,CAAA;AAEnDC,EAAAA,SAAS,CAACY,OAAO,CAAErC,GAAG,IAAI;IACxB,MAAMoE,QAAQ,GAAGD,SAAS,CAAClB,GAAG,CAAC9C,cAAc,CAACH,GAAG,CAAC,CAAC,CAAA;IACnD,IAAIA,GAAG,CAACC,GAAG,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;AACjC;AACAiE,MAAAA,SAAS,CAAC7B,GAAG,CAACnC,cAAc,CAACH,GAAG,CAAC,EAAEqE,uBAAuB,CAACrE,GAAG,CAAC,CAAC,CAAA;AACjE,KAAA,MAAM,IAAI,CAACoE,QAAQ,EAAE;AACpB;MACAD,SAAS,CAAC7B,GAAG,CAACtC,GAAG,CAACC,GAAG,EAAED,GAAG,CAAC,CAAA;AAC5B,KAAA;AACH,GAAC,CAAC,CAAA;EAEF,OAAOsE,KAAK,CAACC,IAAI,CAACJ,SAAS,CAACK,MAAM,EAAE,CAAC,CAAA;AACvC,CAAA;AAEA;AACA;AACA,SAASH,uBAAuB,CAACrE,GAAmB,EAAA;EAClD,OAAO;AAAC,IAAA,GAAGA,GAAG;IAAEC,GAAG,EAAEE,cAAc,CAACH,GAAG,CAAA;GAAE,CAAA;AAC3C;;ACjMgB,SAAAyE,WAAS,CAAC3G,MAAc,EAAE4G,kBAAsC,EAAA;EAC9E,IAAIjD,SAAS,GAAqB,EAAE,CAAA;EACpC,MAAMkD,gBAAgB,GAAGC,yBAAQ,CAAC9G,MAAM,CAAC+G,sBAAsB,IAAI,EAAE,EAAEC,uBAAuB,CAAC,CAAA;EAC/F,MAAMC,mBAAmB,GAAuB,EAAE,CAAA;AAElD,EAAA,IAAI9G,OAA+C,CAAA;AAEnD,EAAA,eAAe+G,WAAW,GAAA;IACxB,IAAI,CAAC/G,OAAO,EAAE;AACZA,MAAAA,OAAO,GAAG4C,iBAAiB,CACzB/C,MAAM,EACL4E,IAAI,IAAI;AACPjB,QAAAA,SAAS,GAAGiB,IAAI,CAAA;AAChBiC,QAAAA,gBAAgB,EAAE,CAAA;OACnB,EACDD,kBAAkB,CACnB,CAAA;AACF,KAAA;IAED,MAAMzG,OAAO,CAACmD,MAAM,CAAA;AACtB,GAAA;AAEA,EAAA,eAAe6D,KAAK,CAAUC,SAAiB,EAAEC,MAAgC,EAAA;AAC/E,IAAA,MAAMH,WAAW,EAAE,CAAA;AACnB,IAAA,MAAMI,IAAI,GAAGpG,YAAK,CAACkG,SAAS,EAAE;AAACC,MAAAA,MAAAA;AAAO,KAAA,CAAC,CAAA;AACvC,IAAA,MAAME,MAAM,GAAG,MAAMC,eAAQ,CAACF,IAAW,EAAE;AAACnH,MAAAA,OAAO,EAAEwD,SAAS;AAAE0D,MAAAA,MAAAA;AAAM,KAAC,CAAC,CAAA;IACxE,OAAOE,MAAM,CAACpC,GAAG,EAAE,CAAA;AACrB,GAAA;EAEA,eAAesC,WAAW,CAACvC,UAAkB,EAAA;AAC3C,IAAA,MAAMgC,WAAW,EAAE,CAAA;AACnB,IAAA,OAAOC,KAAK,CAACO,wBAAsB,CAAA,gBAAA,CAAA,EAAE;AAACpC,MAAAA,EAAE,EAAEJ,UAAAA;AAAW,KAAA,CAAC,CAAA;AACxD,GAAA;EAEA,eAAejC,YAAY,CAAC0E,WAAqB,EAAA;AAC/C,IAAA,MAAMT,WAAW,EAAE,CAAA;AACnB,IAAA,MAAMU,UAAU,GAAGD,WAAW,CAACE,GAAG,CAAEvC,EAAE,IAAkB,CAAAA,UAAAA,EAAAA,SAAS,CAAC,CAACwC,IAAI,CAAC,KAAK,CAAC,CAAA;AAC9E,IAAA,OAAOX,KAAK,CAAC,CAAIS,CAAAA,EAAAA,UAAU,GAAG,CAAC,CAAA;AACjC,GAAA;AAEA,EAAA,SAASG,SAAS,CAChBX,SAAiB,EACjBC,MAA+B,EAC/BW,QAAwD,EAAA;AAExD,IAAA,IAAI,CAAChI,MAAM,CAACF,MAAM,EAAE;AAClB,MAAA,MAAM,IAAIuB,KAAK,CAAC,iDAAiD,CAAC,CAAA;AACnE,KAAA;AAED;AAEA;AACA,IAAA,MAAM4G,YAAY,GAAG;AAACd,MAAAA,KAAK,EAAEC,SAAS;MAAEC,MAAM;AAAEW,MAAAA,QAAAA;KAAS,CAAA;AACzDf,IAAAA,mBAAmB,CAACtC,IAAI,CAACsD,YAAY,CAAC,CAAA;IAEtC,IAAIC,YAAY,GAAG,KAAK,CAAA;IACxB,MAAMrG,WAAW,GAAG,MAAK;AACvB,MAAA,IAAIqG,YAAY,EAAE;QAChB,OAAOpG,OAAO,CAACC,OAAO,EAAE,CAAA;AACzB,OAAA;AAEDmG,MAAAA,YAAY,GAAG,IAAI,CAAA;MACnBjB,mBAAmB,CAACvB,MAAM,CAACuB,mBAAmB,CAACxB,OAAO,CAACwC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAA;MACxE,OAAOnG,OAAO,CAACC,OAAO,EAAE,CAAA;KACzB,CAAA;IAEDoG,wBAAwB,CAACF,YAAY,CAAC,CAAA;IACtC,OAAO;AAACpG,MAAAA,WAAAA;KAAY,CAAA;AACtB,GAAA;EAEA,SAASsG,wBAAwB,CAACF,YAA8B,EAAA;AAC9D,IAAA,OAAOd,KAAK,CAACc,YAAY,CAACd,KAAK,EAAEc,YAAY,CAACZ,MAAM,CAAC,CAClD9D,IAAI,CAAE6E,GAAG,IAAI;AACZ,MAAA,IAAI,gBAAgB,IAAIH,YAAY,IAAII,6BAAS,CAACJ,YAAY,CAACK,cAAc,EAAEF,GAAG,CAAC,EAAE;AACnF,QAAA,OAAA;AACD,OAAA;MAEDH,YAAY,CAACK,cAAc,GAAGF,GAAG,CAAA;AACjCH,MAAAA,YAAY,CAACD,QAAQ,CAACzH,SAAS,EAAE6H,GAAG,CAAC,CAAA;AACvC,KAAC,CAAC,CACDG,KAAK,CAAEpH,GAAG,IAAI;AACb8G,MAAAA,YAAY,CAACD,QAAQ,CAAC7G,GAAG,CAAC,CAAA;AAC5B,KAAC,CAAC,CAAA;AACN,GAAA;AAEA,EAAA,SAAS6F,uBAAuB,GAAA;AAC9BC,IAAAA,mBAAmB,CAAC1C,OAAO,CAAC4D,wBAAwB,CAAC,CAAA;AACvD,GAAA;AAEA,EAAA,SAASpH,KAAK,GAAA;IACZ8F,gBAAgB,CAAC2B,MAAM,EAAE,CAAA;IACzB,OAAOrI,OAAO,GAAGA,OAAO,CAAC0B,WAAW,EAAE,GAAGC,OAAO,CAACC,OAAO,EAAE,CAAA;AAC5D,GAAA;EAEA,OAAO;IAACoF,KAAK;IAAEM,WAAW;IAAExE,YAAY;IAAE8E,SAAS;AAAEhH,IAAAA,KAAAA;GAAM,CAAA;AAC7D;;ACpGM,SAAU0H,aAAa,CAAClB,MAAgC,EAAA;EAC5D,IAAI,CAACA,MAAM,EAAE;AACX,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AAED,EAAA,IAAI,EAAE,OAAO,IAAIA,MAAM,CAAC,IAAI,OAAOA,MAAM,CAACnG,KAAK,KAAK,QAAQ,IAAImG,MAAM,CAACnG,KAAK,KAAK,IAAI,EAAE;AACrF,IAAA,OAAO,KAAK,CAAA;AACb,GAAA;AAED,EAAA,OACE,aAAa,IAAImG,MAAM,CAACnG,KAAK,IAC7B,OAAQmG,MAAsB,CAACnG,KAAK,CAACsH,WAAW,KAAK,QAAQ,IAC7D,EAAE,KAAK,IAAInB,MAAM,CAAC,CAAA;AAEtB,CAAA;AAEM,SAAUoB,QAAQ,CAACC,IAAc,EAAA;AACrC,EAAA,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI,OAAO,IAAIA,IAAI,IAAI,SAAS,IAAIA,IAAI,EAAE;AACpE,IAAA,OAAOA,IAAI,CAACtH,OAAO,IAAIsH,IAAI,CAACxH,KAAK,CAAA;AAClC,GAAA;AAED,EAAA,OAAO,iBAAiB,CAAA;AAC1B,CAAA;AAEM,SAAUyH,kBAAkB,CAAC3G,GAAmB,EAAA;EACpD,OAAO,CAACA,GAAG,CAACC,GAAG,CAACC,UAAU,CAAC,IAAI,CAAC,CAAA;AAClC;;ACvBO,MAAMa,YAAY,GAAuC,SAASA,YAAY,CAAC;EACpF/C,SAAS;EACTC,OAAO;EACPC,KAAK;EACLgD,aAAa;AACbC,EAAAA,YAAY,GAAG,EAAA;AAOhB,CAAA,EAAA;AACC,EAAA,MAAMyF,OAAO,GAAG,CAAA,QAAA,EAAW5I,SAA0C,CAAA,8BAAA,EAAAC,QAAS,CAAA,CAAA;EAC9E,MAAMkH,MAAM,GACVhE,YAAY,CAAC0F,MAAM,GAAG,CAAC,GAAG,IAAIC,eAAe,CAAC;AAACC,IAAAA,KAAK,EAAE5F,YAAY,IAAA,IAAA,GAAA,KAAA,CAAA,GAAZA,YAAY,CAAEyE,IAAI,CAAC,GAAG,CAAA;GAAE,CAAC,GAAG,EAAE,CAAA;AACtF,EAAA,MAAMtH,GAAG,GAAG,CAAA,EAAGsI,OAAW,CAAA,CAAA,EAAAzB,OAAQ,CAAA,CAAA;EAClC,MAAMhH,OAAO,GAAGD,KAAK,GAAG;IAACE,aAAa,EAAE,UAAUF,KAAO,CAAA,CAAA;AAAA,GAAC,GAAGG,SAAS,CAAA;AAEtE,EAAA,OAAO,IAAIuB,OAAO,CAAC,CAACC,OAAO,EAAEgC,MAAM,KAAI;AACrCoB,IAAAA,uBAAG,CAAC;MAAC3E,GAAG;AAAEH,MAAAA,OAAAA;AAAO,KAAC,EAAE,CAACc,GAAG,EAAE+H,QAAQ,KAAI;AACpC,MAAA,IAAI/H,GAAG,EAAE;QACP4C,MAAM,CAAC5C,GAAG,CAAC,CAAA;AACX,QAAA,OAAA;AACD,OAAA;AAED+H,MAAAA,QAAQ,CAACC,WAAW,CAAC,MAAM,CAAC,CAAA;MAE5B,MAAMC,MAAM,GAAa,EAAE,CAAA;AAC3B,MAAA,IAAIF,QAAQ,CAAC3H,UAAU,KAAK,GAAG,EAAE;AAC/B2H,QAAAA,QAAQ,CACLG,EAAE,CAAC,MAAM,EAAGC,KAAa,IAAKF,MAAM,CAACzE,IAAI,CAAC2E,KAAK,CAAC,CAAC,CACjDD,EAAE,CAAC,KAAK,EAAE,MAAK;AACd,UAAA,MAAMT,IAAI,GAAG3H,IAAI,CAACC,KAAK,CAACqI,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC,CAACK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;UAC/D1F,MAAM,CAAC,IAAI1C,KAAK,CAA6B,CAAA,yBAAA,EAAAsH,QAAQ,CAACC,IAAI,CAAC,CAAE,CAAA,CAAC,CAAC,CAAA;AACjE,SAAC,CAAC,CAAA;AACJ,QAAA,OAAA;AACD,OAAA;MAED,MAAMjF,SAAS,GAAqB,EAAE,CAAA;AACtCuF,MAAAA,QAAQ,CACLQ,IAAI,CAACC,yBAAK,CAAC1I,IAAI,CAACC,KAAK,CAAC,CAAC,CACvBmI,EAAE,CAAC,MAAM,EAAGnH,GAAiB,IAAI;AAChC,QAAA,IAAIuG,aAAa,CAACvG,GAAG,CAAC,EAAE;UACtB6B,MAAM,CAAC,IAAI1C,KAAK,CAAC,CAAA,yBAAA,EAA4Ba,GAAG,CAACd,KAAK,CAAE,CAAA,CAAC,CAAC,CAAA;AAC1D,UAAA,OAAA;AACD,SAAA;AAED,QAAA,IAAIc,GAAG,IAAI2G,kBAAkB,CAAC3G,GAAG,CAAC,EAAE;AAClCyB,UAAAA,SAAS,CAACgB,IAAI,CAACzC,GAAG,CAAC,CAAA;AACpB,SAAA;AAED,QAAA,IAAIkB,aAAa,IAAIO,SAAS,CAACoF,MAAM,GAAG3F,aAAa,EAAE;UACrDW,MAAM,CACJ,IAAI1C,KAAK,8CAA8C+B,aAAa,CAAA,UAAA,CAAY,CAAC,CAClF,CAAA;UACD8F,QAAQ,CAACU,OAAO,EAAE,CAAA;AACnB,SAAA;OACF,CAAC,CACDP,EAAE,CAAC,KAAK,EAAE,MAAMtH,OAAO,CAAC4B,SAAS,CAAC,CAAC,CAAA;AACxC,KAAC,CAAC,CAAA;AACJ,GAAC,CAAC,CAAA;AACJ,CAAC;;SCpEekG,gBAAgB,GAAA;EAC9B,MAAM,CAACC,KAAK,CAAC,GAAGC,OAAO,CAACC,OAAO,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACN,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC9B,GAAG,CAACqC,MAAM,CAAC,CAAA;EAC3E,IAAIJ,KAAK,GAAG,EAAE,EAAE;AACd,IAAA,MAAM,IAAIzI,KAAK,CAAC,uCAAuC,CAAC,CAAA;AACzD,GAAA;AACH;;ACLA;;AAEG;AAOG,SAAUsF,SAAS,CAAC3G,MAAc,EAAA;AAAA,EAAA,IAAA,mBAAA,CAAA;AACtC6J,EAAAA,gBAAgB,EAAE,CAAA;EAElB,OAAOM,WAAY,CAACnK,MAAM,EAAE;AAC1BP,IAAAA,WAAW,EAAEO,CAAAA,mBAAAA,GAAAA,MAAM,CAACP,WAAW,kCAAI2K,uCAAmB;AACtDnH,IAAAA,YAAAA;AACD,GAAA,CAAC,CAAA;AACJ;;;;;;;;"}