{"version":3,"file":"index.cjs","sources":["../../src/studio/NextStudioClientOnly.tsx","../../src/studio/NextStudioLayout.tsx","../../src/studio/NextStudio.tsx","../../src/studio/usePrefersColorScheme.ts"],"sourcesContent":["import {type ReactNode, startTransition, useEffect, useState} from 'react'\n\n/** @alpha */\nexport type NextStudioClientOnlyProps = {\n  children: ReactNode\n  fallback: ReactNode\n}\n\n/** @alpha */\nexport function NextStudioClientOnly({children, fallback}: NextStudioClientOnlyProps) {\n  const [mounted, setMounted] = useState(false)\n  useEffect(() => startTransition(() => setMounted(true)), [])\n\n  return <>{mounted ? children : fallback}</>\n}\n","/* eslint-disable camelcase */\nimport {memo} from 'react'\nimport type {StudioProps} from 'sanity'\nimport styled from 'styled-components'\n\nimport {useTheme} from './useTheme'\n\n/** @alpha */\nexport interface NextStudioLayoutProps extends Pick<StudioProps, 'config' | 'scheme'> {\n  children: React.ReactNode\n}\n\ntype LayoutProps = {\n  $bg: string\n  $fontFamily: string\n}\nconst Layout = styled.div<LayoutProps>`\n  font-family: ${({$fontFamily}) => $fontFamily};\n  background-color: ${({$bg}: any) => $bg};\n  height: 100vh;\n  max-height: 100dvh;\n  overscroll-behavior: none;\n  -webkit-font-smoothing: antialiased;\n  overflow: auto;\n`\n\nconst NextStudioLayoutComponent = ({\n  children,\n  config,\n  scheme = 'light',\n}: NextStudioLayoutProps) => {\n  const theme = useTheme(config)\n\n  return (\n    <Layout\n      data-ui=\"NextStudioLayout\"\n      $fontFamily={theme.fonts.text.family}\n      $bg={theme.color[scheme].default.base.bg}\n    >\n      {children}\n    </Layout>\n  )\n}\n\n/** @alpha */\nexport const NextStudioLayout = memo(NextStudioLayoutComponent)\n","import {memo} from 'react'\nimport {type StudioProps, Studio} from 'sanity'\n\nimport {NextStudioClientOnly} from './NextStudioClientOnly'\nimport {NextStudioLayout} from './NextStudioLayout'\nimport {type NextStudioLoadingProps, NextStudioLoading} from './NextStudioLoading'\n\nexport type {NextStudioLoadingProps}\n\n// eslint-disable-next-line no-warning-comments\n// FIXME: https://github.com/vercel/next.js/issues/43147\n// const Studio = memo(lazy(() => import('./LazyStudio')))\n\n/** @beta */\nexport interface NextStudioProps extends StudioProps {\n  children?: React.ReactNode\n  /**\n   * Render the <noscript> tag\n   * @defaultValue true\n   * @alpha\n   */\n  unstable__noScript?: NextStudioLoadingProps['unstable__noScript']\n}\n/**\n * Intended to render at the root of a page, letting the Studio own that page and render much like it would if you used `npx sanity start` to render\n * It's a drop-in replacement for `import {Studio} from 'sanity'`\n */\nconst NextStudioComponent = ({\n  children,\n  config,\n  unstable__noScript,\n  scheme,\n  ...props\n}: NextStudioProps) => (\n  <NextStudioClientOnly\n    fallback={\n      <NextStudioLoading\n        unstable__noScript={unstable__noScript}\n        config={config}\n        scheme={scheme}\n      />\n    }\n  >\n    <NextStudioLayout config={config} scheme={scheme}>\n      {children || <Studio config={config} scheme={scheme} unstable_globalStyles {...props} />}\n    </NextStudioLayout>\n  </NextStudioClientOnly>\n)\n\n/**\n * Override how the Studio renders by passing children.\n * This is useful for advanced use cases where you're using StudioProvider and StudioLayout instead of Studio:\n * ```\n * import {StudioProvider, StudioLayout} from 'sanity'\n * import {NextStudio} from 'next-sanity/studio'\n * <NextStudio config={config}>\n *   <StudioProvider config={config}>\n *     <CustomComponentThatUsesContextFromStudioProvider />\n *     <StudioLayout />\n *   </StudioProvider>\n * </NextStudio>\n * ```\n * @beta\n */\nexport const NextStudio = memo(NextStudioComponent)\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport type {ThemeColorSchemeKey} from '@sanity/ui'\nimport {useSyncExternalStore} from 'react'\n\nfunction createStore() {\n  if (typeof document === 'undefined') {\n    return {\n      subscribe: () => () => {},\n      getSnapshot: () => 'light' as const,\n      getServerSnapshot: () => 'light' as const,\n    }\n  }\n\n  const matchMedia = window.matchMedia('(prefers-color-scheme: dark)')\n\n  return {\n    subscribe: (onStoreChange: () => void) => {\n      matchMedia.addEventListener('change', onStoreChange)\n      return () => matchMedia.removeEventListener('change', onStoreChange)\n    },\n    getSnapshot: () => (matchMedia.matches ? 'dark' : 'light'),\n    getServerSnapshot: () => 'light' as const,\n  }\n}\nconst store = createStore()\n\n/** @alpha */\nexport function usePrefersColorScheme(): ThemeColorSchemeKey {\n  return useSyncExternalStore(store.subscribe, store.getSnapshot, store.getServerSnapshot)\n}\n"],"names":["NextStudioClientOnly","children","fallback","mounted","setMounted","useState","useEffect","startTransition","jsx","Fragment","Layout","styled","default","div","$fontFamily","$bg","NextStudioLayoutComponent","config","scheme","theme","useTheme","fonts","text","family","color","base","bg","NextStudioLayout","memo","NextStudioComponent","unstable__noScript","props","NextStudioLoading","Studio","unstable_globalStyles","NextStudio","createStore","document","subscribe","getSnapshot","getServerSnapshot","matchMedia","window","onStoreChange","addEventListener","removeEventListener","matches","store","usePrefersColorScheme","useSyncExternalStore"],"mappings":"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"}